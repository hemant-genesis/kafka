services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - microservices-network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - microservices-network

  mysql:
    image: mysql:8
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: sample
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - microservices-network

  discovery-server:
    container_name: discovery-server
    image: maven:3.9.6-eclipse-temurin-17
    working_dir: /app
    volumes:
      - ./discovery-server:/app
      - ~/.m2:/root/.m2
    command: >
      sh -c "mvn spring-boot:run -Dspring-boot.run.jvmArguments='-Dspring.devtools.restart.enabled=true'"
    ports:
      - "8761:8761"
    restart: unless-stopped
    environment:
      SERVER_PORT: 8761
      SPRING_APPLICATION_NAME: discovery-server
    networks:
      - microservices-network

  clickstream-producer:
    container_name: clickstream-producer
    image: maven:3.9.6-eclipse-temurin-17
    working_dir: /app
    volumes:
      - ./clickstream-producer:/app
      - ~/.m2:/root/.m2
    command: >
      sh -c "mvn spring-boot:run -Dspring-boot.run.jvmArguments='-Dspring.devtools.restart.enabled=true'"
    ports:
      - "1000:1000"
    depends_on:
      - mysql
      - discovery-server
    restart: unless-stopped
    environment:
      SERVER_PORT: 1000
      SPRING_APPLICATION_NAME: clickstream-producer
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_SERVER_HOST: discovery-server
      EUREKA_SERVER_PORT: 8761
    networks:
      - microservices-network

  etl-service:
    container_name: etl-service
    image: maven:3.9.6-eclipse-temurin-17
    working_dir: /app
    volumes:
      - ./etl-service:/app
      - ~/.m2:/root/.m2
    command: >
      sh -c "mvn spring-boot:run -Dspring-boot.run.jvmArguments='-Dspring.devtools.restart.enabled=true'"
    ports:
      - "2000:2000"
    depends_on:
      - mysql
      - discovery-server
    restart: unless-stopped
    environment:
      SERVER_PORT: 2000
      SPRING_APPLICATION_NAME: etl-service
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_SERVER_HOST: discovery-server
      EUREKA_SERVER_PORT: 8761
    networks:
      - microservices-network

  loader-service:
    container_name: loader-service
    image: maven:3.9.6-eclipse-temurin-17
    working_dir: /app
    volumes:
      - ./loader-service:/app
      - ~/.m2:/root/.m2
    command: >
      sh -c "mvn spring-boot:run -Dspring-boot.run.jvmArguments='-Dspring.devtools.restart.enabled=true'"
    ports:
      - "3000:3000"
    depends_on:
      - mysql
      - discovery-server
    restart: unless-stopped
    environment:
      SERVER_PORT: 3000
      SPRING_APPLICATION_NAME: loader-service
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_SERVER_HOST: discovery-server
      EUREKA_SERVER_PORT: 8761
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/sample
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  mysql-data: